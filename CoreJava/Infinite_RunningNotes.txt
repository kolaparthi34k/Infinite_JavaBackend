Day1
======
>Tools: Swagger/Postman/Log4j
>BackEnd: Jdbc,Hibernate,SQL
>FrontEnd: JSP,html5,CSS3,Javascript(ES6),React
>Testing: Junit,Protractor
>Programming:Java,Spring,SpringBoot
>POC/Capstone--1 week
>Architectures: Microservices Development,MVC1,MVC2
---------------------
Java Introduction

>>J2SE/jse--Java Standard Edition---desiging basic app or desktop app
J2EE/jee---Java Enterprise edition---Banking app or enterprise app
J2ME/jme---Java Mobile edition----Mobile development/Embedded systems

Web app and desktop app

system s/w and app s/w

check list: jdk,mysql,git,eclipse
Eclipse+jdk

=============>
oracle Jdk or open Jdk or Jrocketkit or Scala

>>>>>
Jre folder is part of JDK.

Nuts and Bolts:

Cache
Memory-RAM
Loader-----utility or tool.Its job is to load something into memory.
Platform--o/s--windows/sun solaris/Mac/linux/As 400
Independent:if we are able to run code on windows,linux,mac,sun architectures.
we need tp call it as architecture neutral
i18n or Unicode
Server
i18n----internationalization
============================================
Day2
----
jdk20---latest
https://www.mysql.com/downloads/
https://www.oracle.com/in/java/technologies/javase/javase8-archive-downloads.html
------------------
Monitoring tools: New Relic,App dynamics,data Dog,ELK Stack,Sentry......etc

Bytecode: bytecode is a code which will be in 0,1 and some special characters/Symbols generated by JVM.

>>CAN WE CONVERT BYTECODE TO SOURCE CODE? use java decompiler s/w
>>CAN WE CONVERT sOURCECODE TO BYTECODE?JDK


>>write a code and we are going to save in .java format.
>>Using Javac ,we are going to compile the sourcecode.,finnaly bytecode will be generateed.
>>if any errors in code,execution will stop and bytecode will not be generated.
But 
bytecode will be in .class format.


>>Does java supports pointers?
ans)No. but Java  internally uses pointers.

>>At linking phase,we will verify and link/attach libraries to class file.
https://docs.oracle.com/javase/8/docs/api/
https://jcp.org/  ---->JSR(java specification requirements)

=======================================================================
Zip file====>
JSE====>jar(java archieve).Jar consists of class files and MANIFEST.MF file.
MANIFEST.MF is a configuration file.

JEE===>ear(enterprise archieve)
Web App====>war(web archieve).War consists of class files,html/css/Js/jsp/servlets and web.xml file.

jee===>    CORBA-->EJB--->Spring--->SpringBoot

JAva----functional and Object oriented approaches(OOPS).

Functional Programming
=====================
>>  functions,procedures and Functional topics like loops,conditional statments,datatypes and operators.
>>main advanatge is modularity.
>>A function is block or group of commands or instructions which are used to achive a specific functionality.
>>There are 2 types of functions.
1)user-defined
2)Pre-defined

>Always the entry point will be main.Main functions is userdefined function."main" keyword is predefined.
>Always logic shld be with in function.
>>always functions returns some value.procedures or methods,they wont return anything.

add()
{
int a = 9;
return a;
}

add()
{
int a = 9;
}

Datatypes:
---------
>speccifies type of data.
>bytes wont support i18n.
' '
byte
9-----number
a-----characters/Symbols
$------special character
9.89------------float
Sriivas---string
''---character
""=====>string
0--->boolean
====>
byte transmission---faster
character transmission--slower


Variable:
>a variable will store your data temporarly .


Syntax:

<datatype> <variablename>;

Example: int a;//declaring a variable
int a = 90;//defining a variable

int a,b,c=90;
a,b,c int =90;//not valid

int char=90;//not valid
int a = 90,89;

int p = a+b;//

int z = (2+3)+(33+4);


>>Thru command prompt
>>Using batch file
>>Eclipse or any IDE---preferred way
>environment variables---preferred way
>>from other programming languages we call java program.......etc
=========================================================================
int a = 90;
int b = 190;

b=(a+b)-(a=b);

System.out.println("a="+a);
req:swap

by temporary variables
operators
expressions

com.infinite.product

>>variable arguments

static
{
}----static block

{
}-----unnamed block

abcd()
{
}----named block
----->

comparisons or condition checking

if statement.

in java if is used for comparison or condition checking.

Syntax:

if(condition)
{
//commands

}


int a =650;

if value in a is greater than 650,then display " Good Credit Score"

otherwise display "Bad score.You are not eligible for loans"

2023

Success---1
failed-----else---0

Task1:

write a Java program for comparing 3 variablees.
a=90 b=890 c=78

display highest and lowest varaible

Task2:
write a Java program for below requirement:
a=0 b=10


if a and b value is between 0 and 10,diplay message as "Single Digit Number".

============================================================
Day3:
----
>>pmd
>>Sonar Qube: 5.5
It is a code Quality testing tool.
Sonarqube is available in 2 flavours.
1)Sonar cloud
2)Sonar On-premises
>https://www.sonarsource.com/solutions/clean-code/

>>>>>Loops:Loop is used for repeating a task till condition fails.

++
--

Daily task: 9:ooam till 6:30pm
Monday-----Friday
When conditionfails?on weekends
1)while
2)do-while
3)for
4)for-each

>>>While:
================

iniatialization
While(condition)
{
s//instructions
increment/decrement 
}

Requirement:

10 13 16 19 22


Req:

1a 2a 3a 4a 5a

Req5: display even no from 2345 till 5678.display "this no in even".

Req6: 10 20 30 40 50 70 80 90

hint:  continue;

1)Write a Java program to display pattern in below way.
1a 2b 3c 4d 5e....z26
2)Program to display 24 table.
3)Explore the memory size of datatypes in Java.
4)Display your number.
Use only integer datatype.
5)Using do-while,display 1 to 50 in reverse order.

===>

Arrays,OOPS ,API,IO,

while in if block
if in while----yes
while within while---possible
while within do-while---possible
if--if==>possible
>>As java doesnt support pointers,there is no concept of Garbage values.it will display default value.

>>>>Static and Non static:
==========================
>>static will be loaded into memory first.:no need to create object for static.
>>non-static will be loaded last.We need to create object for non-static.
>>static doent know anything about non-static.

===================
Day4
-----
>static
>public,private,protected
>Oops concepts
>String/StringBuffer API
>Exception Handling

Scanner class:USing scanner ,we can provide input to the program to user.
Scanner is predefined class.

Anypackgae which starts with java,is predfined package.

In Java,We are having 3 modes.
IN OUT ERROR
System class is a predifined class.
System.out.println()
System.in


Design a program for swapping,2 table ,displaying all alphabets using functions.

>>While writing the code,we can have both static and  non static contents.

private,public,protected========>ACCESS specifiers

for,switch,Arrays,ENUM,Wrapper classes,OOPS

Day 5: for-each,collections,exception handling,IO and basics of multi threading
-----------------------------------------
Arrays:
--------

Primitive datatypes:int,float,double....etc
int a= 90,45;---Scalar

reference datatypes:Arrays

Group of values of same datatype in a variable======>reference datatypes.
>>Every Array will have size.
>>WE CANNOT EXCEED THE SIZE.
>>We cannot store mixed datatypes in arrays.
>>Arrays will have index

-----------------
ArrayIndexOutOfBounds Exception

To access element in an array,we use below syntax:
Syntax: <datatype> variablename[size];
a[9];

>In arrays length is property,it is not a function.
()

TAsk1: String y[]={"Monday","Tuesday","Wednesday","Thursday"};
if loop reachs Wednesday,then display output in reverse manner "yadsendew"  in upper case. 

Any operation on numm leads to NullpointerException.
indexOf()
isEmpty()
lastIndexof()
equalsIfnoreCase()
concat
endswith
hashCode
replaceAll


Task2:

Display:  "I am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmer".


TAsk3:

Returns the index within this string of the first occurrence.
Returns the pndex wpthpn thps strpng of the fprst occurrence.


Task 4:

in/p: 
Task2:

Display:  "I am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmer".


TAsk3:Returns the index within this string of the first occurrence.
o/p:
No of 'i' letters: 6
No of 'r' letters: 
No of 'o' letters: 

For:
=====
>>for loop is a advanced version of your while and do while.

Syntax:
for(initialization;condition,increment/decrement)
{
//statements
}


2 types of arguments.
1)Program arguments:USed for passing values to main method.
2)Vm arguments:USed for passing values to VM.
Example: Heapsize setting

How to use command Line Arguments?

Switch:
========
>>Swicth for multiple condition checking.]
>>Swicth consists of multiple cases.
>>Every case will have a break.
Syntax:

Switch(condition)
{

case a: //statements;
case b: //statements;
case c: //statements;
default: //statements;
}

======================
Object oriented concepts in JAVA
-------------------------------------
SMALLTALK/EIFFLE
System.exit

>class: speicification
Object------Heap
Inheritance
Polymorphism
Encapsulation
Abstraction
Message Passing

SBI---State,Behaviour,Identity

Class: A class is a combination of state and Behaviour.
Behaviour means functionality.
state means property.

Syantx:

<access specifier> class <classname>
{
//state
//behaviour
}

class Outer_Demo {
   private int num = 175;  
   
   // inner class
   public class Inner_Demo {
      public int getNum() {
         System.out.println("getnum method of the inner class");
         return num;
      }
   }
}

public class MyClass {

   public static void main(String args[]) {
      
      Outer_Demo outer = new Outer_Demo();
      
      // Instantiating the inner class
      Outer_Demo.Inner_Demo inner = outer.new Inner_Demo();
      System.out.println(inner.getNum());
   }
}
==================
Day5
---------
>A package is a collection of Classes,interfaces,abstract class,methods,variables.
>Package are of 2 types.1)User defined 2)Pre-defined
>Any package which is part of your jdk is called as Pre-defined package.
>Any no of objects can objects for a class.
>>Memory will be allocated for an clASS once you create OBJECT.
System.out.println();
>>Method with body is called as concrete method.
>>>>Method without body is called as abstract method.

Uses of object creation:
1)Unnamed block will be called.
2)Memory allocation.
3)reference will be created.
4)Class level varaibles can be institilizaed at runtime using constructors.

Syntax:

<classname> reference=new <classname>();

Stat ref =  new Stat();
Left          right

new is mainly used for memory allocation
>Allways intitilize reference with null,we we are not allocating memory.

Constructor:
===========
>A constructor is a method whose name is same as class name.
>Constructors are used to intitilize class level variables.
>>constructors wont return any values.
>>constructors will be within class.
>constructors are of 3 types.
1)parametrized
2)empty/un-parametrized constructor
3)default: if developer is not providing any constructor,then JVM will provide default constructor.

>This always points to current class.
>>No 2 constructors can have same no of parameters with same datatype.Otherwise it will say duplicate constructor.

Task1:
create a java program  which class varaiable as int array and display the values in that array using display method.

>>Note:From JVM prospective,Evry java program is a thread.

>>>Overloading and Overriding:
===============================
>>Overloading means same name with different types and no of  parameters and if possible retrun type.
>Overloading occurs in same class.

Rules for Method Overloading:
==============================
The overloaded method must change the argument list (number of parameters, data type, or sequence of parameters).
The overloaded method can change the return type.
The overloaded method can change the access modifier (the signature of the function should be different).



Overriding:
================
>Overiding means using same function but in different classes.

Rules for Method Overiding:
===========================
>he argument list should be exactly the same as that of the overridden method.
The return type should be the same or a subtype of the return type declared in the original overridden method in the superclass.
The access level cannot be more restrictive than the overridden method's access level. For example: If the superclass method is declared public then the overriding method in the subclass cannot be either private or protected.
Instance methods can be overridden only if they are inherited by the subclass.
A method declared final cannot be overridden.
A method declared static cannot be overridden but can be re-declared.
If a method cannot be inherited, then it cannot be overridden.
A subclass within the same package as the instance's superclass can override any superclass method that is not declared private or final.
A subclass in a different package can only override the non-final methods declared public or protected.
An overriding method can throw any uncheck exceptions, regardless of whether the overridden method throws exceptions or not. However, the overriding method should not throw checked exceptions that are new or broader than the ones declared by the overridden method. The overriding method can throw narrower or fewer exceptions than the overridden method.
Constructors cannot be overridden.

>Any class which is declared as final cannot be inherited.
>A class can be private only in inner classes.


>parent/base/super class
>child or sub or derived class






































































































































































 






































































































---




















































































































































































































