Day1
======
>Tools: Swagger/Postman/Log4j
>BackEnd: Jdbc,Hibernate,SQL
>FrontEnd: JSP,html5,CSS3,Javascript(ES6),React
>Testing: Junit,Protractor
>Programming:Java,Spring,SpringBoot
>POC/Capstone--1 week
>Architectures: Microservices Development,MVC1,MVC2
---------------------
Java Introduction

>>J2SE/jse--Java Standard Edition---desiging basic app or desktop app
J2EE/jee---Java Enterprise edition---Banking app or enterprise app
J2ME/jme---Java Mobile edition----Mobile development/Embedded systems

Web app and desktop app

system s/w and app s/w

check list: jdk,mysql,git,eclipse
Eclipse+jdk

=============>
oracle Jdk or open Jdk or Jrocketkit or Scala

>>>>>
Jre folder is part of JDK.

Nuts and Bolts:

Cache
Memory-RAM
Loader-----utility or tool.Its job is to load something into memory.
Platform--o/s--windows/sun solaris/Mac/linux/As 400
Independent:if we are able to run code on windows,linux,mac,sun architectures.
we need tp call it as architecture neutral
i18n or Unicode
Server
i18n----internationalization
============================================
Day2
----
jdk20---latest
https://www.mysql.com/downloads/
https://www.oracle.com/in/java/technologies/javase/javase8-archive-downloads.html
------------------
Monitoring tools: New Relic,App dynamics,data Dog,ELK Stack,Sentry......etc

Bytecode: bytecode is a code which will be in 0,1 and some special characters/Symbols generated by JVM.

>>CAN WE CONVERT BYTECODE TO SOURCE CODE? use java decompiler s/w
>>CAN WE CONVERT sOURCECODE TO BYTECODE?JDK


>>write a code and we are going to save in .java format.
>>Using Javac ,we are going to compile the sourcecode.,finnaly bytecode will be generateed.
>>if any errors in code,execution will stop and bytecode will not be generated.
But 
bytecode will be in .class format.


>>Does java supports pointers?
ans)No. but Java  internally uses pointers.

>>At linking phase,we will verify and link/attach libraries to class file.
https://docs.oracle.com/javase/8/docs/api/
https://jcp.org/  ---->JSR(java specification requirements)

=======================================================================
Zip file====>
JSE====>jar(java archieve).Jar consists of class files and MANIFEST.MF file.
MANIFEST.MF is a configuration file.

JEE===>ear(enterprise archieve)
Web App====>war(web archieve).War consists of class files,html/css/Js/jsp/servlets and web.xml file.

jee===>    CORBA-->EJB--->Spring--->SpringBoot

JAva----functional and Object oriented approaches(OOPS).

Functional Programming
=====================
>>  functions,procedures and Functional topics like loops,conditional statments,datatypes and operators.
>>main advanatge is modularity.
>>A function is block or group of commands or instructions which are used to achive a specific functionality.
>>There are 2 types of functions.
1)user-defined
2)Pre-defined

>Always the entry point will be main.Main functions is userdefined function."main" keyword is predefined.
>Always logic shld be with in function.
>>always functions returns some value.procedures or methods,they wont return anything.

add()
{
int a = 9;
return a;
}

add()
{
int a = 9;
}

Datatypes:
---------
>speccifies type of data.
>bytes wont support i18n.
' '
byte
9-----number
a-----characters/Symbols
$------special character
9.89------------float
Sriivas---string
''---character
""=====>string
0--->boolean
====>
byte transmission---faster
character transmission--slower


Variable:
>a variable will store your data temporarly .


Syntax:

<datatype> <variablename>;

Example: int a;//declaring a variable
int a = 90;//defining a variable

int a,b,c=90;
a,b,c int =90;//not valid

int char=90;//not valid
int a = 90,89;

int p = a+b;//

int z = (2+3)+(33+4);


>>Thru command prompt
>>Using batch file
>>Eclipse or any IDE---preferred way
>environment variables---preferred way
>>from other programming languages we call java program.......etc
=========================================================================
int a = 90;
int b = 190;

b=(a+b)-(a=b);

System.out.println("a="+a);
req:swap

by temporary variables
operators
expressions

com.infinite.product

>>variable arguments

static
{
}----static block

{
}-----unnamed block

abcd()
{
}----named block
----->

comparisons or condition checking

if statement.

in java if is used for comparison or condition checking.

Syntax:

if(condition)
{
//commands

}


int a =650;

if value in a is greater than 650,then display " Good Credit Score"

otherwise display "Bad score.You are not eligible for loans"

2023

Success---1
failed-----else---0

Task1:

write a Java program for comparing 3 variablees.
a=90 b=890 c=78

display highest and lowest varaible

Task2:
write a Java program for below requirement:
a=0 b=10


if a and b value is between 0 and 10,diplay message as "Single Digit Number".

============================================================
Day3:
----
>>pmd
>>Sonar Qube: 5.5
It is a code Quality testing tool.
Sonarqube is available in 2 flavours.
1)Sonar cloud
2)Sonar On-premises
>https://www.sonarsource.com/solutions/clean-code/

>>>>>Loops:Loop is used for repeating a task till condition fails.

++
--

Daily task: 9:ooam till 6:30pm
Monday-----Friday
When conditionfails?on weekends
1)while
2)do-while
3)for
4)for-each

>>>While:
================

iniatialization
While(condition)
{
s//instructions
increment/decrement 
}

Requirement:

10 13 16 19 22


Req:

1a 2a 3a 4a 5a

Req5: display even no from 2345 till 5678.display "this no in even".

Req6: 10 20 30 40 50 70 80 90

hint:  continue;

1)Write a Java program to display pattern in below way.
1a 2b 3c 4d 5e....z26
2)Program to display 24 table.
3)Explore the memory size of datatypes in Java.
4)Display your number.
Use only integer datatype.
5)Using do-while,display 1 to 50 in reverse order.

===>

Arrays,OOPS ,API,IO,

while in if block
if in while----yes
while within while---possible
while within do-while---possible
if--if==>possible
>>As java doesnt support pointers,there is no concept of Garbage values.it will display default value.

>>>>Static and Non static:
==========================
>>static will be loaded into memory first.:no need to create object for static.
>>non-static will be loaded last.We need to create object for non-static.
>>static doent know anything about non-static.

===================
Day4
-----
>static
>public,private,protected
>Oops concepts
>String/StringBuffer API
>Exception Handling

Scanner class:USing scanner ,we can provide input to the program to user.
Scanner is predefined class.

Anypackgae which starts with java,is predfined package.

In Java,We are having 3 modes.
IN OUT ERROR
System class is a predifined class.
System.out.println()
System.in


Design a program for swapping,2 table ,displaying all alphabets using functions.

>>While writing the code,we can have both static and  non static contents.

private,public,protected========>ACCESS specifiers

for,switch,Arrays,ENUM,Wrapper classes,OOPS

Day 5: for-each,collections,exception handling,IO and basics of multi threading
-----------------------------------------
Arrays:
--------

Primitive datatypes:int,float,double....etc
int a= 90,45;---Scalar

reference datatypes:Arrays

Group of values of same datatype in a variable======>reference datatypes.
>>Every Array will have size.
>>WE CANNOT EXCEED THE SIZE.
>>We cannot store mixed datatypes in arrays.
>>Arrays will have index

-----------------
ArrayIndexOutOfBounds Exception

To access element in an array,we use below syntax:
Syntax: <datatype> variablename[size];
a[9];

>In arrays length is property,it is not a function.
()

TAsk1: String y[]={"Monday","Tuesday","Wednesday","Thursday"};
if loop reachs Wednesday,then display output in reverse manner "yadsendew"  in upper case. 

Any operation on numm leads to NullpointerException.
indexOf()
isEmpty()
lastIndexof()
equalsIfnoreCase()
concat
endswith
hashCode
replaceAll


Task2:

Display:  "I am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmer".


TAsk3:

Returns the index within this string of the first occurrence.
Returns the pndex wpthpn thps strpng of the fprst occurrence.


Task 4:

in/p: 
Task2:

Display:  "I am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmerI am bad programmer".


TAsk3:Returns the index within this string of the first occurrence.
o/p:
No of 'i' letters: 6
No of 'r' letters: 
No of 'o' letters: 

For:
=====
>>for loop is a advanced version of your while and do while.

Syntax:
for(initialization;condition,increment/decrement)
{
//statements
}


2 types of arguments.
1)Program arguments:USed for passing values to main method.
2)Vm arguments:USed for passing values to VM.
Example: Heapsize setting

How to use command Line Arguments?

Switch:
========
>>Swicth for multiple condition checking.]
>>Swicth consists of multiple cases.
>>Every case will have a break.
Syntax:

Switch(condition)
{

case a: //statements;
case b: //statements;
case c: //statements;
default: //statements;
}

======================
Object oriented concepts in JAVA
-------------------------------------
SMALLTALK/EIFFLE
System.exit

>class: speicification
Object------Heap
Inheritance
Polymorphism
Encapsulation
Abstraction
Message Passing

SBI---State,Behaviour,Identity

Class: A class is a combination of state and Behaviour.
Behaviour means functionality.
state means property.

Syantx:

<access specifier> class <classname>
{
//state
//behaviour
}

class Outer_Demo {
   private int num = 175;  
   
   // inner class
   public class Inner_Demo {
      public int getNum() {
         System.out.println("getnum method of the inner class");
         return num;
      }
   }
}

public class MyClass {

   public static void main(String args[]) {
      
      Outer_Demo outer = new Outer_Demo();
      
      // Instantiating the inner class
      Outer_Demo.Inner_Demo inner = outer.new Inner_Demo();
      System.out.println(inner.getNum());
   }
}
==================
Day5
---------
>A package is a collection of Classes,interfaces,abstract class,methods,variables.
>Package are of 2 types.1)User defined 2)Pre-defined
>Any package which is part of your jdk is called as Pre-defined package.
>Any no of objects can objects for a class.
>>Memory will be allocated for an clASS once you create OBJECT.
System.out.println();
>>Method with body is called as concrete method.
>>>>Method without body is called as abstract method.

Uses of object creation:
1)Unnamed block will be called.
2)Memory allocation.
3)reference will be created.
4)Class level varaibles can be institilizaed at runtime using constructors.

Syntax:

<classname> reference=new <classname>();

Stat ref =  new Stat();
Left          right

new is mainly used for memory allocation
>Allways intitilize reference with null,we we are not allocating memory.

Constructor:
===========
>A constructor is a method whose name is same as class name.
>Constructors are used to intitilize class level variables.
>>constructors wont return any values.
>>constructors will be within class.
>constructors are of 3 types.
1)parametrized
2)empty/un-parametrized constructor
3)default: if developer is not providing any constructor,then JVM will provide default constructor.

>This always points to current class.
>>No 2 constructors can have same no of parameters with same datatype.Otherwise it will say duplicate constructor.

Task1:
create a java program  which class varaiable as int array and display the values in that array using display method.

>>Note:From JVM prospective,Evry java program is a thread.

>>>Overloading and Overriding:
===============================
>>Overloading means same name with different types and no of  parameters and if possible retrun type.
>Overloading occurs in same class.

Rules for Method Overloading:
==============================
The overloaded method must change the argument list (number of parameters, data type, or sequence of parameters).
The overloaded method can change the return type.
The overloaded method can change the access modifier (the signature of the function should be different).



Overriding:
================
>Overiding means using same function but in different classes.

Rules for Method Overiding:
===========================
>he argument list should be exactly the same as that of the overridden method.
The return type should be the same or a subtype of the return type declared in the original overridden method in the superclass.
The access level cannot be more restrictive than the overridden method's access level. For example: If the superclass method is declared public then the overriding method in the subclass cannot be either private or protected.
Instance methods can be overridden only if they are inherited by the subclass.
A method declared final cannot be overridden.
A method declared static cannot be overridden but can be re-declared.
If a method cannot be inherited, then it cannot be overridden.
A subclass within the same package as the instance's superclass can override any superclass method that is not declared private or final.
A subclass in a different package can only override the non-final methods declared public or protected.
An overriding method can throw any uncheck exceptions, regardless of whether the overridden method throws exceptions or not. However, the overriding method should not throw checked exceptions that are new or broader than the ones declared by the overridden method. The overriding method can throw narrower or fewer exceptions than the overridden method.
Constructors cannot be overridden.

>Any class which is declared as final cannot be inherited.
>A class can be private only in inner classes.


>parent/base/super class
>child or sub or derived class

>.IN java for evry class ,Object is the base class.
>javap java.lang.Object
javap is used for displaying the metadata about the provided class.

Interfaces and Abstract Classes:
=================================
Method without body is called as abstract method.

Ambani------>e-commerce---Mobiles----->Mobile app

December 2023

Business Analyst

Infinite----->Sep 2, 2023
discuss about requirement.skillset
>>design>>>Agile>>Flow----sep 4th
>>30 people
>>Sep 5th====>srinivas--->

Oct====>  

Interface------An interface is similar like class but with abstract methods.
>>We cannot create object for interface.
>by default all methods in interface are abstract.
>Any class can implement interface.
>>@Overide is called as annotation.Annotations will be indicated with '@' symbol.
>By default all varaible in interface are public static final.

=====================================================

Collections and ABstract classes:
===================================
>>Abstract class is a class with abstract methods.
>>abstract  classes are of 2 types.
1)pure abstract: only abstract methods
2)partially abstract: we will ahve both abstract and concrete methods.

Collections:
=============
>>collections can grow and shrink.
List is an interface.It allows duplicates.
>We can add/modify/delete Objects.
>All drawbacks in arrays can be overcomed using List.
https://docs.oracle.com/javase/8/docs/api/java/util/List.html
>>Arraylist maintains insertion order.
>>To convert arrylist to array,use below method:
toArray()
>Iterator is mainly used for displaying data in a collection.It was specially designed for that.


for(<target> ref:Source)
{
}
>by default all collection will implements Cloneable, Serializable
>vector is syncronized and Arraylist is unsyncronized.

SET:
====
>set will not allow duplicates.
addAll() method in collections.
how do to remove duplicates from arraylist?

MAp will allow keys and values.no 2 keys can be same.


>>Test collections using null and "".

>>>Exception Handling:
=======================
>any abnormal conditional in program leads to errors messaging or termination of program.To deal with this,we are going to use
Exception handling.
>
Syntax:

try
{
}
catch(Exception e)
{
}
finally
{
}

even thourgh there is no error ,finnaly block will be executed.
>

try---catch/finally
try---finally
>finnaly cannot be nested.

All predefined exception extends Throwable.

>>Create a program for user defined exception.
revise some exceptiomns like ArrayIndexOutofboundsexceptions,nullpointer......
>checked and unchecked exceptions.
=======================================================
Day 6===> JDBC,Servlets,JSp
------------------------------
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JDBC<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>Pls cross check whether you were able to connect to mysql.
Db creation: create database training;
show databases;
>>use training;//switching among databases
>Wht is API?
API stands for Application program interface.An api is combination of classes,interfaces,methods designed for a specific purpose.
Every API has some set of rules defined.

MAinly API are used for connecting/communicate 2 or more different systems/terminals/PC/machines or applications.

API's are of 2 types.
1)predefined(Vendor)
2)Userdefined

App1(java)---------App2(.net)----API

>In simple it makes "API Calls" on the backend.
customer----Server----Chef
>>JDBC stands for Java database connectivity.
>JDBC gives us API's that can access any kind of RDBMS databases.
>>I want to save/persist/connecgt some data to backend database from frontend,then i can use JDBC.
RDBMS Databases: Oracle,Mysql,Postgress,Db2....etc.
>To design any app using JDBC,we need to have below S/ws.
1)Databases----Mysql
2)Datasource
3)JDBC API
4)Database tables---we are going to create employee table
5)Java Programming language

Employee table---->fullname,idno,department

Aaadhar--->firtname,lastname,address,voter card no,city,country

>Eclipse+Tomcat integration
>JDBC IS AN API TO CONNECT TO BACKEND DATABASE/SYSTEMS.

>Journey:
ODBC>>>>>>JDBC>>>>JPA(Hibernate)

>>JPS internally uses jdbc.

ODBC--->odbc stands for open database connectivity.
>ODbc is old technology,which is designed using c/C++.becuase of this this is platform dependent.
>odbc is mainly used for microsoft technologies like microsoft access,excel,wordpad.....etc.
>>odbc wont support remote databases.


>>oNLY BROWSER knows how to interact with server.No other component ion the world knows how to intreact with server effectively.
>Protocols: http/https
>browser will perform HTTP requests and HTTP responses.
>Without httprequest there is not http response.
>>In java if any APP want to communicate with database,it uses JDBC driver.
>>browser is also called as USERAGENT.it is alias name.
>>browser knows only http/https protocls.


Browser--->Type ur URL--->click hit button----->As sson as i click next--->http request will be created and will be forwared to DNS server--->from there request will be redirected to Microserver server---->it will check whether username is valid by interacting with microsoftdatabase---->if record is available/unavailable gives response to server---->filter----->browser 


>>request-response architecture.
>>>>>>>>>>>>>>>>>>>>>>>from java appp,i want to push my data to db for storing?
sol)JDBC/Hibernate

>>In this JDBC,we need to focus on drivers?
In jdbc we are having 4 types of drivers.There is also 5th driver.we wont focus on that.
https://github.com/kolaparthi34k/Infinite_JavaBackend/tree/main/Jdbc
>In projects we will use Type4 driver.

>IN jdbc we use java.sql and javax.sql packages.
x stands for xtension ie latest package or upgraded package from Oracle


Heavy weight===More memory and more CPU time
light weight===Less memory and less cpu time.

DB Connnection Pooling:
=======================
>DB connection object is a heavy weight.We shld know how to utilized db resources properly.Otherwise,handling more customer traffic will be difficult.
>DB Connnection Pooling will reduce burden on databases.It uses the connection resources in effective way ie reusability.
==========================================================
Day7
====
JDBC API
>>MySQL  Server----DB
Mysql workbench----IDE---RAD tool--We can also connect to remote database.
>Centralized database/Distributed DB
>Transactions----->commit and rollback
>API-

For API development and testing,there are so many tools.
>>Now postman is also called as OPEN API.

APP--------------------JDBC Driver------------------------->DB

IOT
>>Datasource:
>>Every connection to a database is called as session.
Example: 3 apps are connecting to same db.
>>session will be invalidated.

For developer ,it is request,but for server it is thread.
Task1>Explore sticky session
>Phising filter
>Mysql---for Learning
Mysql workbench---For projects and development
>Alternative tools for MYSQL workbench Eclipse datasource feature,toad for mysql...

>>GA---General Availability.means it is for Public use.
>Dont use Alpha/beta/Snapshot verrsions directly withour team approaval.
>>>In projects we will use Corrporate repositories.IT team will place all dependencies in a common corporate repository.
>Any repository that we create an organization for internal purpose is called as corporate repository.
TWe are going to use the tool NEXUS SONATYPE/Jfrog repository managers.
>Network that we create for internal purpose of an organization is called as INTRANET.
>IT team will perform Jar scanning for vulnarabilities.
https://www.sonatype.com/products/sonatype-nexus-repository
>>MAVEN tool---dependency management tool/build tool
>>GRADLE is tough compitetor for MAVEN.
>>Maven is inbuilt in eclipse.

Mysql details:
>>Password

connection metadata of mysql
username---root
password:mysql@123
Drivername:com.mysql.jdbc.Driver
Db server ipaddress:localhost/127.0.0.1(loopback address)/ipaddress

connection metadata of Oracle
username---scott
password:tiger
Drivername:oracle.jdbc.driver.OracleDriver
Db server ipaddress:localhost/127.0.0.1(loopback address)/ipaddress

>>Every service/protcol runs on specific port no.
HTTP----8080
HTTPS-----8443/443
Oracle db---1521
Mysql---3306

https://mvnrepository.com/artifact/mysql/mysql-connector-java/8.0.28

>Resultset is mainly called as cursor or it is a container to store the records after executing the sql querty statement.
=================================================
Day 8:
-----
Drawbacks:

1)Make the values insert at runtime.
Solution)Use PreparedStatement

2)connection closing shld be in final.Final will run irrespective of exceptions in the  code.
Solution)Can be handled in code.

3)Not portable
Solution)USe properties or XML files.

4)password shld not disclosed in code.
solution)if we need to use the password in code,encrypty the password and then use.
2)Place password in VAULT server or AWS Secrets manager  and pull password from  there.(prefered).Integrate vault code with JAva code.
3)USe properties file and place your encrypted password in properties or xml or YAML file.

5)driver class,url and passwords should be dynamic.
solution)can be achieved using 4 the step.

>Prepared statement,LOB datatypes,saving images in db,batch operation,calling functions using callable statements.

>>LOB datatypes:
=================
>>LOB stands for large objects.
LOB is of 3 types:
1)Blob--binary large object.Example:images,audio....etc
2)clob---character large object.Example:documents...etc
3)nclob--n no of character large objects.

>>>>SQL is db dependent.

Example: select * from tab; will work on oracle,but the same will not work in mYSQL.

>>SQL INJECTION
=====================
fiddle

SQL,PL/SQL(SQL+programming concepts),Forms and reports

>>Callable statements:used for clalling functions/Stored procudures in databases.
>>Prepared Statment:
>This is mainly for inserting values to the queries at runtime.
>Prepared statement helps us to avoid SQL INJECTIONs upto some extent80%.
To use effectly preparedstatement,if u follow the stands then Injection is not possible.
>In prepared statement,we use '?' as a place holder.

>>TAsk2:
Using prepared statement insert single character into employee fullname.
i/p: a
o/p: record inserted successfully.

i/p: abcdd
o/p: Please provide character data.Operation Failed.

>>>>oracle ADF----servlets
>>>

image into database.
create table imagestab(imagefile blob);

Using JDBC code ,we shld insert file to table.
Using JDBC code ,we shld display file from table.

Clues: FileObjectStream
==========================
Day9
=======
>Servletconfig--is for servlet
>servletcontext---context is for entire application.
>Filter,filterchain?Filters advantages
>Lifecycle of servlets---loading--init--service---destroy
>Horizontal scalling of servers and vertical scaling of server?
>Web.xml--deployment descriptor/config file
>types if configuration files
xml,json,bson,properties,YAML
>>Http request and httpresponse

Program1:
Display Welcome to Infinite using Servlet.
>>javax.servlet.http.HttpServlet


OCWCD---Oracle certified Web component Developer
Servlets comes undeer J2EE.


>>In eclipse,we we create Servlet,it will create 2 methods.
doget,dopost.

HTTP Method.
GET---doGet
PUT---doPut
POST
DELETE
TRACE
PATCH

But in servlets ,we have below methods:
doGet, if the servlet supports HTTP GET requests
doPost, for HTTP POST requests
doPut, for HTTP PUT requests
doDelete, for HTTP DELETE requests

>put vs post?
put----updating data
post----creating new data
get---pulling the data
delete---deleting the data
patch---updating partial data


HTTTP ERROR MEssaages
>>https://en.wikipedia.org/wiki/List_of_HTTP_status_codes

>>Till Tomcat 5.0 version ,when ever we make changes in code,we need to restart server.
After 5.0 version,they addded auto restart feature.

>>>>http://localhost:8080/ServletsTraining/infinite.html
http://localhost:8080/ServletsTraining/infinite.html?username=srinivas&password=jlfkalkaslflas


>>Any data which you push thru get method is a query Parameters.
>>>Any data which you push thru post method is a Pay load.
>In java,to display date,we are going to use Date class which is part of java.util.

if username is bob123,password as apabng123$,then display my website 
with "Successfully Loggedin" in green color.
otherwise red color.


>sendRedirect() is for browser. side redirecting.
RequestDispatcher() comes under server side redireting.
>>config and context,filters


servletcontext is for entire app.
servletconfig is for individual servlet.
request and response methods
 <context-param>
    <param-name>mysql</param-name>
    <param-value>com.mysql.jdbc.Driver</param-value>
  </context-param>
  
     <init-param>
    <param-name>Mysql</param-name>
    <param-value>com.mysql.java.Driver</param-value>
    </init-param>
    <init-param>
     <param-name>Oracle</param-name>
    <param-value>com.oracle.java.Driver</param-value>
    </init-param>

>Task2:

Write a Servlet program to display records from Employee table using Servletconfing ig object.
==============================
DAy 10:
---------
Java bean
DAO Design pattern
Troubleshooting techniqs for Apache TOmcat server
Understanlog from console.
Date:
TImestamp: combination of date and time.
>>Task1:
>Display current date using java program
>Explore date class in sql and util package.
>Display current day,day in week and current month using date class.
>Display Italy  cusrrent date and time.
>Write a program to find diffrence between 2 dates in days and minutes.

TAsk2:
=========
>i/p:123456 o/p : one lakh Twenty Three Thousand Four Hundred and fifty Six only
>>i/p:123456 o/p : 1,23,456
>>optional:Display random number using Java.
Rule: Shld not use Random class.

--SecureRandomClass---Salt,seed

useragent

session management
=======================
>In web sessions plays important role for conversation between 2 parties ie client and server.
>any data which we store in sesion are temporary.
>In java,we can perform session management using below ways.
1)Cookies
2)Hiddenform fields
3)URL rewriting
4)HttpSession

>In jsp,we shld focus on types of tags.
expression language---EL---{}
scriptlets...etc

>include is mainly usesd in "Tiles" concept in web.
==========================================
Day 11
=======
>Connection conn =null;
try{
Connection con=Drivermnager.get

}
finally{

conn.close();
}

>>>>Task: Yashraj+Neha+Bhanuprakash seetha=======>Friday is demo
Requirement:
Sending email using JAVA

LOg4J Tool:
===========
>https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core/2.18.0
//log4j.appender.FILE.File=${log}/log.out
log4j.rootLogger=DEBUG,FILE,console
// Set the appender named X to be a File appender
log4j.appender.FILE=org.apache.log4j.FileAppender
log4j.appender.FILE.File=D:\\logs\\jbackend.log
//log4j.appender.FILE.File=${log}/log.out
log4j.appender.file.MaxFileSize=1MB
log4j.appender.file.MaxBackupIndex=1
// Define the layout for X appender
log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.conversionPattern=%m%n

log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=[%t] %-5p %c %x - %m%n

>	PropertyConfigurator.configure("log4j.properties");
	 private static final Logger logger
     = Logger.getLogger(Log4jTesting.class);
=================================
DAy12:
======
Apache Tomcat===8.5

AJP is protocol which is used by tomcat to do communication between Catalina and jasper.

Core java--->Connector shld be in build path of ur project.
Web app----->external jars shld be in Server Lib directory

com.mysql.jdbc.Driver

>>NIO stands for NON blocking io
classnot found exception

>Tomcat uses Juli as a logging mechanism tool.

>>All web app which we create will be started in webapp folder.
>>All 3rd part libraries shld be plavced in lib folder
>>log files for server will be placed in lib folder
>>Tomcat can be started and stop from bin folder.
>>tomcat configrations are available in conf folder.



>> Always encrypt username and passwword in jdbc.ie sensitive data shld be encrypted.
Note: always encryption shld be done in one os and decryption shld be done in same os or same JVM.

Project name: JavaSecurity
Packagename: com.infinite.security
private static SecretKeySpec secretKey;
  private static byte[] key;

  public static void setKey(final String myKey) {
    MessageDigest sha = null;
    try {
      key = myKey.getBytes("UTF-8");
      sha = MessageDigest.getInstance("SHA-1");
      key = sha.digest(key);
      key = Arrays.copyOf(key, 16);
      secretKey = new SecretKeySpec(key, "AES");
    } catch (NoSuchAlgorithmException | UnsupportedEncodingException e) {
      e.printStackTrace();
    }
  }

  public static String encrypt(final String strToEncrypt, final String secret) {
    try {
      setKey(secret);
      Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding");
      cipher.init(Cipher.ENCRYPT_MODE, secretKey);
      return Base64.getEncoder()
        .encodeToString(cipher.doFinal(strToEncrypt.getBytes("UTF-8")));
    } catch (Exception e) {
      System.out.println("Error while encrypting: " + e.toString());
    }
    return null;
  }

  public static String decrypt(final String strToDecrypt, final String secret) {
    try {
      setKey(secret);
      Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5PADDING");
      cipher.init(Cipher.DECRYPT_MODE, secretKey);
      return new String(cipher.doFinal(Base64.getDecoder()
        .decode(strToDecrypt)));
    } catch (Exception e) {
      System.out.println("Error while decrypting: " + e.toString());
    }
    return null;
  }
  
  abcd-----srin
  
  bcded----srini
  
  >>>SecureRandom class---1st--- salt and seed
    apache Random utils---2nd 

>>Encrypt/Decrypt ur credentials and integrate with JDBC code+Log4j?


System.out.println(JavaSecurity.encrypt("root", "qwe123"));
		System.out.println(JavaSecurity.decrypt("Z6Qk9CCVAljmxy/fYwruXw==", "qwe123"));
		System.out.println(JavaSecurity.encrypt("mysql", "q123"));
		System.out.println(JavaSecurity.decrypt("8H+B/GtPRXuSjTfGjMzv4Q==", "q123"));

Filereader is a java io package.
>>>>mysql connector----desktop----buildpath
>>>>mysql connector----Servlet----Server>>lib

>>Write a servlet program to read data from properties file using Servlets.
Hint: 	InputStream st=getServletContext().getResourceAsStream("");

>>>>MYSQL
SQL BAsics
ER models
========================
Day 13
-----
Topics:

Java POJO----Coding/MCQ----Score will be '0' if standards are not followed
Mysql----MCQS+5-10 Queries---output is not matching ,score will be 0
Log4j Inetgartion--Coding/MCQ

>>Evry row  in table will have rownum and rowid.Both are called as "Psuedo coulumns".DB server will create psuedo columns automatically when we create atable.
>DBA responsibilities:
=======================
1)Schema creation/DB designing and required integrity constraints creation
2)Administration tasks
3)Backup of data on daily basis.
4)Restore the data on failure
5)He shld how to use db tools effectively
6)Security
7)user creations and privileges to the team shld be provided by dba.
8)Involve the desgining of db for projects
9)maintainance of db
10)performance tunning.
11)If any isssues,he shld focus on root causes.
12)Report/Data Analytics Generation about db utilization.
13)Debugging
 
Senior DBA---Associate DBA

>>In db,we call row as tuple.

Note: Dont alter the table/database after inserting the data or if data exists in table.

Never use  * while displaying table data.

SYntax for creating a table:

create table <tablename> (column name datatype,column name datatype,....);
>Validations of data while inserting can be done using integrity constraints.

>>ROW_NUMBER() OVER (<partition_definition> <order_definition>)

>Mysql provides Aggregate functions.

>Remaning tablename:
alter table <oldtablename> rename <newtable_name>;

>Removing records from a table:
truncate table <tablename>;
>drop will remove the entire table.
drop table <tablename>;

Task1: can i rollback a dropped table from database?
Task2: Delete vs truncate?
>In databases,we will have 2 types of bins.
recycle bin and purge bin.

>Select user from mysql.user;  
SELECT user, host, db, command FROM information_schema.processlist;  
>>>>>>>
https://dev.mysql.com/doc/refman/8.0/en/string-functions.html

Note:All predefined Mysql functions can be used only in SELECT Statement.

Date and time functions
string functions
Aggregate functions
>>CREATE TABLE Persons (
    ID int NOT NULL,
    LastName varchar(255) NOT NULL,
    FirstName varchar(255),
    Age int,
    CONSTRAINT PK_Person PRIMARY KEY (ID)
);

>>or ALTER TABLE table_name
ADD PRIMARY KEY(column_list);

>>MySQL has five reference options: CASCADE, SET NULL, NO ACTION, RESTRICT, and SET DEFAULT.

CASCADE: if a row from the parent table is deleted or updated, the values of the matching rows in the child table automatically deleted or updated.
SET NULL:  if a row from the parent table is deleted or updated, the values of the foreign key column (or columns) in the child table are set to NULL.
RESTRICT:  if a row from the parent table has a matching row in the child table, MySQL rejects deleting or updating rows in the parent table.
NO ACTION: is the same as RESTRICT.
SET DEFAULT: is recognized by the MySQL parser. However, this action is rejected by both InnoDB and NDB tables.
>>CREATE TABLE categories(
    categoryId INT AUTO_INCREMENT PRIMARY KEY,
    categoryName VARCHAR(100) NOT NULL
) ENGINE=INNODB;

CREATE TABLE products(
    productId INT AUTO_INCREMENT PRIMARY KEY,
    productName varchar(100) not null,
    categoryId INT,
    CONSTRAINT fk_category
    FOREIGN KEY (categoryId) 
        REFERENCES categories(categoryId)
);
>>

insert into products (productName,categoryId) values('MAC',2);

Cascading rules comes to picture.

Cascade Example: CREATE TABLE products(
    productId INT AUTO_INCREMENT PRIMARY KEY,
    productName varchar(100) not null,
    categoryId INT NOT NULL,
    CONSTRAINT fk_category
    FOREIGN KEY (categoryId) 
    REFERENCES categories(categoryId)
        ON UPDATE CASCADE
        ON DELETE CASCADE
) ENGINE=INNODB;

>>>CREATE INDEX Syntax
Creates an index on a table. Duplicate values are allowed:

CREATE INDEX index_name
ON table_name (column1, column2, ...);
CREATE UNIQUE INDEX Syntax
Creates a unique index on a table. Duplicate values are not allowed:

CREATE UNIQUE INDEX index_name
ON table_name (column1, column2, ...);

>>>Dropping index: ALTER TABLE table_name
DROP INDEX index_name;


Day 14:
==========

>>con.setAutoCommit() method in jdbc.if autocommit is false,until we issue autocomiit true,till that time data will not be persisted in db.Thats the reason this method is used for Transactions.

>Synatax: set autocommit=true/false;
To commit data:  commit;
To rollback: rollback;

Note: rollback is for records in atable but not db objects.

Db objects: Table,view,sequence,trigger,index,stored proccedures...etc

>for closing the mysql console termina,use exit command.

>>Inserting Data into Table using select approach:
mysql> create table laptop(laptopname char(30),origin char(30),price integer,pin
code integer,laptopmodel varchar(55));


>for laptopname field,default value shld be "leneovo",Origin shld be "India",pincode,default shld be 10000. 

>>Task2: coalesc,case in mysql


To establish a relation between tables,we need to have a common column and there shld exist primary key and foreign key relation.

>>Normalization?
1)1nf
2)2nf
3)3nf
4)boyceecodd normal form
 Memory will not be allocated for views.

====================================================================
Maven
-----
>Versions: v1,v2,v3
https://repo.maven.apache.org/maven2/archetype-catalog.xml
>>In eclipse maven is inbuilt.
>>By default wen we create aproject,maven will create a local repository.
Its name is ".m2"
>>.m2 will be created by maven automatically.
>>MAven has 2 types of configuration files.
1)pom.xml----is local to project
2)settings.xml----is global to all projects running in workspace
>>Repos of 3 types.
1)Local
2)Corporate--------------more secure.We will use "SONATYPE NEXUS" tool or JFROG tool to createe corprate repository.Only IT team or DEVOPS team will create.
3)Public-----not secure

Example:You are working on a SCM project.You need to use JFREEcharts feature in ur code.

Mytrika,yasaswini,Bhanu prasad---Jfreechart library

Need to add hibernate,Spring AOP,Hikari dependencys in pom.xml.any version
>>in Spring,name of the configuration file is "applicationcontext.xml"

https://docs.spring.io/spring-framework/docs/4.2.x/spring-framework-reference/html/xsd-configuration.html

<?xml version="1.0" encoding="UTF-8"?> is called as prolog.

>In majority of xml files we will have dtd.DTD stands for document type definition.
xsi?
xmlns?
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

<context:annotation-config/>

<bean id="custAddress1" class="org.cap.demo.Address">
<property name="doorNo" value="190/AA"/>
<property name="streetName" value="West Avvenue"/>
<property name="city" value="Chennai"/>
</bean>
</beans>ad 

Instead of applicationcontext.xml ,we are using sample.xml.
In spring bean means pojo class.
Every pojo class will have properties,and we need to create setters and getters.
>Via config file,we are going to push the data.
Steps:
======
1)Create a Maven project without archetype.
2)Create a package and create a bean class with required properties.
3)Create xml file in "src/resources" folder.
4)Create a  java main class to test the Dependency injection.
5)Clean build the project
6)Run the java main class.
 
 
 Create a new maven project for injecting below values.
 todays date,name,city.
>> <constructor-arg index="0" value="India"></constructor-arg>
 
Annotation:
The annotation-config is configured in Spring XML configuration. The annotation-config activates various annotations to be detected in bean classes. It is configured in XML configuration as following.
<context:annotation-config/> 
The annotation-config activates following annotations in bean classes.
1. Spring @Required and @Autowired annotations.
2. JSR 250 @PostConstruct, @PreDestroy and @Resource annotations.
3. JAX-WS @WebServiceRef annotation.
4. EJB 3 @EJB annotation.
5. JPA @PersistenceContext and @PersistenceUnit annotations.
 
Scope:
singleton – Scopes a single bean definition to a single object instance per Spring IoC container.
prototype – Return a new bean instance each time when requested
request – Return a single bean instance per HTTP request.
session – Return a single bean instance per HTTP session.
globalSession – Return a single bean instance per global HTTP session.

>><bean factory-bean="dateFormat" factory-method="parse">
				<constructor-arg value="2010-01-31" />
			</bean>


>>Autowiring:
No.	Mode	Description
1)	no	It is the default autowiring mode. It means no autowiring bydefault.
2)	byName	The byName mode injects the object dependency according to name of the bean. In such case, property name and bean name must be same. It internally calls setter method.
3)	byType	The byType mode injects the object dependency according to type. So property name and bean name can be different. It internally calls setter method.
4)	constructor	The constructor mode injects the dependency by calling the constructor of the class. It calls the constructor having large number of parameters.
5)	autodetect	It is deprecated since Spring 3.
 

>>>>>Design patterns

Factory design pattern

>a constructor argument can be a number which is index and it starts with 0.

goals:
clean
install 
deploy
=====>
>Write a servlet program to upload only pdf files to server.(without web.xml)---wednesday----collections
>Hikari connection pool mechanism using Spring core(Dependency injection).---Thursday--maven,helper classes
>Write a java program to read an csv file.---Hint:file io package---Wednesday
>E-R diagram--->self learning---friday

==================>
https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/support/ClassPathXmlApplicationContext.html#%3Cinit%3E(java.lang.String)


BeanFactory---->ApplicationContext---->
{}---EL

===>JDK1.8
annotation---1.5

javac DD.java;code --annotations

When i run my code,mycode shld throw error messages saying" Annotations not supprted".

Tip: backward compatability

clue: Mission 369 movie

>Windows>>C:\\users\\

>>>Create a Maven Project without archetype.
Projectname: SpringCollections

"applicationContext.xml"

SPRING CORE+SPRING MVC
>>MAP
key and value

ABCD(Map p,Set s,List l)
{
}

app.xml:

<constructor-arg>
			<map>
				<entry key="10000" value="Vinay"></entry>
				<entry key="10001" value="Neha"></entry>
				<entry key="10002" value="Subhash"></entry>
			</map>
		</constructor-arg>
		<constructor-arg="st">
			<set>
				<value>Pradeep</value>
				<value>Prasad</value>
				<value>Prasad</value>
			</set>
		</property>



>>>>>Singleton
Over view of Spring MVC and MVC flow

Factory design pattern,factory method?

A obj= new A();
thru Factory methods

MVC Flow:
===========
1)Client requests for a page by specifying the Web URL for the page. E.g. https://skolaparthi.com
2)Client request is intercepted by the Dispatcher Servlet also known as Front Controller. Dispatcher Servlet is a servlet specified in Web.XML file (for XML Based configurations) or in the Web Configuration class (for java based configurations).
3)Dispatcher Servlet uses URL Mapping Handler to find out the relevant controller class to which request should be passed for subsequent processing. For example, If you have a Controller defined for all requests by specifying “/” in the URL, all requests will be entertained by that controller.
4)Once Dispatcher Servlet has identified the Controller to be considered, it passes the client request to the controller.
5)The controller class is the main class controlling the business logic flow once request has been dispatched it it by dispatcher servlet. This class will implement the methods for different type of http requests (e.g. GET, POST) and all logic to call Service layer methods will reside in this controller class.
6)The controller class will also be responsible for returning the ModelAndView object back to the dispatcher servlet after getting all business logic executed and any data returned from DAO layer. ModelAndView object returned by the controller back to the controller specified both view and model objects.

Controller class is annotated by @Controller annotation.

7)After receiving ModelAndView object from the controller, Dispatcher Servlet now sends model object to view resolver to get the name of the view which needs to be rendered.
8)Once the view to be rendered has been identified, Dispatcher Servlet passes model object to the view. Model object contains the data which needs to be displayed in the view. View will be rendered with the model data. Views can be designed in any front-end technology.
9)This view is returned to the client and client can see the view and associated data on his browser.

3-Oct-2023
==========
>@Repository Annotation is used to indicate that the class provides the mechanism for storage, retrieval, update, delete and search operation on objects.
>

1: add hikari dependencies to pom.xml
2)create a Hikariconfig object and provide necessary metadata.
3)pass config as parameter to datasource.

====>
DEFAULT: Use the default isolation level of the underlying database.

READ_COMMITTED: A constant indicating that dirty reads are prevented; non-repeatable reads and phantom reads can occur.

READ_UNCOMMITTED: This isolation level states that a transaction may read data that is still uncommitted by other transactions.

REPEATABLE_READ: A constant indicating that dirty reads and non-repeatable reads are prevented; phantom reads can occur.

SERIALIZABLE: A constant indicating that dirty reads, non-repeatable reads, and phantom reads are prevented.

What do these Jargons dirty reads, phantom reads, or repeatable reads mean?

Dirty Reads: Transaction "A" writes a record. Meanwhile, Transaction "B" reads that same record before Transaction A commits. Later, Transaction A decides to rollback and now we have changes in Transaction B that are inconsistent. This is a dirty read. Transaction B was running in READ_UNCOMMITTED isolation level so it was able to read Transaction A changes before a commit occurred.
Non-Repeatable Reads: Transaction "A" reads some record. Then Transaction "B" writes that same record and commits. Later Transaction A reads that same record again and may get different values because Transaction B made changes to that record and committed. This is a non-repeatable read.
Phantom Reads: Transaction "A" reads a range of records. Meanwhile, Transaction "B" inserts a new record in the same range that Transaction A initially fetched and commits. Later Transaction A reads the same range again and will also get the record that Transaction B just inserted. This is a phantom read: a transaction fetched a range of records multiple times from the database and obtained different result sets (containing phantom records).
@Transactional(timeout=60)

Defaults to the default timeout of the underlying transaction system.

Informs the tx manager about the time duration to wait for an idle tx before a decision is taken to rollback non-responsive transactions.

@Transactional(propagation=Propagation.REQUIRED)

If not specified, the default propagational behavior is REQUIRED. 

Other options are  REQUIRES_NEW , MANDATORY  , SUPPORTS  , NOT_SUPPORTED  , NEVER  , and  NESTED .

REQUIRED

Indicates that the target method cannot run without an active tx. If atxhas already been started before the invocation of this method, then it will continue in the same tx or a newtxwould begin soon as this method is called.    
REQUIRES_NEW

Indicates that a newtxhas to start every time the target method is called. If already atxis going on, it will be suspended before starting a new one.
MANDATORY

Indicates that the target method requires an active tx to be running. If atxis not going on, it will fail by throwing an exception.
SUPPORTS

Indicates that the target method can execute irrespective of atx. If atxis running, it will participate in the same tx. If executed without a tx it will still execute if no errors.
Methods which fetch data are the best candidates for this option.
NOT_SUPPORTED

Indicates that the target method doesn’t require the transaction context to be propagated.
Mostly those methods which run in a transaction but perform in-memory operations are the best candidates for this option.
NEVER

Indicates that the target method will raise an exception if executed in a transactional process.
This option is mostly not used in projects.
@Transactional (rollbackFor=Exception.class)

Default is rollbackFor=RunTimeException.class
In Spring, all API classes throw RuntimeException, which means if any method fails, the container will always rollback the ongoing transaction.
The problem is only with checked exceptions. So this option can be used to declaratively rollback a transaction if Checked Exception occurs.
@Transactional (noRollbackFor=IllegalStateException.class)

Indicates that a rollback should not be issued if the target method raises this exception.

>>>Spring JDBC addesses the below challenges in JDbc:
========================
We need to write a lot of code before and after executing the query, such as creating connection, statement, closing resultset, connection etc.
We need to perform exception handling code on the database logic.
We need to handle transaction.
Repetition of all these codes from one to another database logic is a time consuming task.

==================
Types of JDBC Templates:

JdbcTemplate
NamedParameterJdbcTemplate
SimpleJdbcTemplate
SimpleJdbcInsert and SimpleJdbcCall
>https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/jdbc/core/JdbcTemplate.html

>Validation are of 2 types.
1)client/browser side----js,html5
2)Server side
db level validation,server level validation

Apache POI--for creating/updating/deleting ms offcie files.
itext/pdfbox---for pdf file creating/modify/deletion


<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.1.0.Final</version>
		</dependency>
==>
Understanding Pointcut
Pointcut is an expression language of Spring AOP.

The @Pointcut annotation is used to define the pointcut. We can refer the pointcut expression by name also. Let's see the simple example of pointcut expression.

@Pointcut("execution(* Operation.*(..))")  
private void doSomething() {}  
The name of the pointcut expression is doSomething(). It will be applied on all the methods of Operation class regardless of return type.

Understanding Pointcut Expressions
Let's try the understand the pointcut expressions by the examples given below:

@Pointcut("execution(public * *(..))")  
It will be applied on all the public methods.

@Pointcut("execution(public Operation.*(..))")  
It will be applied on all the public methods of Operation class.

@Pointcut("execution(* Operation.*(..))")  
It will be applied on all the methods of Operation class.

@Pointcut("execution(public Employee.set*(..))")  
It will be applied on all the public setter methods of Employee class.

@Pointcut("execution(int Operation.*(..))")  
It will be applied on all the methods of Operation class that returns int value.




>>>>>https://docs.spring.io/spring-framework/reference/core/aop.html

=======================================================================
9-Oct-2023
===========
>ACID roperties
Primaray key,foreign key creations
Sequence
Check,not null constraints
Cascading rules
Transaction ISolation levels and propagationslation
Relationships,one-to-one,one-to-many,many-to-many

====>
https://hibernate.org/

to fetch values from properties files,the use @Value
@Repository,@Service,@Controller
>>>Steps for Hibernate :
Create the Persistent/Pojo class
Create the mapping file for Persistent class
Create the Configuration file
Create the class that retrieves or stores the persistent object
Load the jar file
Run the first hibernate application by using command prompt
====>
You can access to the SessionFactory object in two ways

first:

StandardServiceRegistry ssr = new StandardServiceRegistryBuilder()
.configure("hibernate.cfg.xml").build();
Metadata meta = new MetadataSources(ssr).getMetadataBuilder().build();
SessionFactory factory = meta.getSessionFactoryBuilder().build();
second:

Configuration cfg = new Configuration().configure();
SessionFactory factory = cfg.buildSessionFactory();

both of them use StandardServiceRegistry, but second one is shorter and use StandardServiceRegistry in the configure() method and you don't see it in your code




================>
ELEMENT	DESCRIPTION
SessionFactory	The SessionFactory is a factory of session and client of Connection Provider. It holds second level cache (optional) of data.

Session	The session object provides an interface between the application and data stored in the database. It is a short-lived object and wraps the JDBC connection. It is a factory of Transaction, Query and Criteria and holds the first-level cache of data. The Session interface provides methods to INSERT, UPDATE, and DELETE the objects.

Transaction	The transaction object specifies the atomic unit of work and is an optional parameter in the Hibernate framework.

ConnectionProvider	It is a factory of JDBC connections and abstracts the application from DriverManager or DataSource. It is an optional parameter in the Hibernate framework.

TransactionFactory	It is a factory of Transaction and is again an optional parameter in the Hibernate framework.


===>
StandardServiceRegistry
MetadataSources
Metadata 
====>
Collection type	Mapping and Description
java.util.Set	This is mapped with a <set> element and initialized with java.util.HashSet
java.util.SortedSet	This is mapped with a <set> element and initialized with java.util.TreeSet. The sort attribute can be set to either a comparator or natural ordering.
java.util.List	This is mapped with a <list> element and initialized with java.util.ArrayList
java.util.Collection	This is mapped with a <bag> or <ibag> element and initialized with java.util.ArrayList
java.util.Map	This is mapped with a <map> element and initialized with java.util.HashMap
java.util.SortedMap	This is mapped with a <map> element and initialized with java.util.TreeMap. The sort attribute can be set to either a comparator or natural ordering.

====
if we want to insert multiple objects into table,
Collections--Map,list,set
Loops
Batch operations

Hibernate Object Lifecycle?
============================
SpringBoot
----------
dependencies version issues---Can be handled using Uber jar architectures
Tomcat not working or throwing errors most frequently---can be fixed if framework is giveing
embedded server.So ,no need to download tomcat and configure in Eclipse.


Spring boot supports Uber jar architecture.
Uber jar means jar with jar.
In main jar all child jars will be appended and downloaded into ur m2 repository.This will avoid 90% of the maven dependency issues.g 

Springboot is mainly used for Designing Cloud based applications and Microservice app development.

Spring boot+Spring Cloud

>>You shld be able to deploy springboot application to AWS cloud/Dockers.


TO deisgn a webservice,we need to write atleast 50 lines.\
But if u use Springboot,within 5 line we can complete.

>>>>To design a Springboot app,below are the ways.
1)USing Eclipse---Gradle/Maven----recommended approach
2)Using Spring Initiliazer --https://start.spring.io/
3)Using SpringBoot Cli
4)Manual approach

https://spring.io/tools--Spring Tool suite version4

>Use static folder for placing static assets like images,fonts...etc

Freemarker

@Repository,@Service,@RestController,@ComponentScanning,@Controller













































